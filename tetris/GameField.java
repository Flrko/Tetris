/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tetris;

import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author One
 */
public class GameField extends javax.swing.JPanel {

    private final static int FIELD_WIDTH = 10;
    private final static int FIELD_HEIGHT = 20;
    
    private List<Cell> grid;
//    private List<Cell> getGrid() {
//        return grid;
//    }
    
    
    /**
     * Creates new form GameField
     */
    public GameField() {
        initComponents();
        
        setFocusable(true);
        
        grid = new ArrayList<>(FIELD_HEIGHT * FIELD_WIDTH);        
    }

    /**
     * Добавление ячейки в сетку
     * @param cells 
     */
    private void addCells(List<Cell> cells) {
        for (Cell cell : cells) {
            grid.add(pointToIndex(cell.getPoint()), cell);
        }
    }
    
    /**
     * Определяет индекс в коллекции, соответствующий координатам клетки .
     * @param point координаты клетки
     * @return 
     */
    private int pointToIndex(Point point) {        
        return point.getY() * FIELD_WIDTH + point.getX();
    }
    
    private void drawSquare(Graphics g, int x, int y, Color color) {        
        g.setColor(color);
        g.fillRect(x + 1, y + 1, squareWidth() - 2, squareHeight() - 2);
        g.setColor(color.brighter());
        g.drawLine(x, y + squareHeight() - 1, x, y);
        g.drawLine(x, y, x + squareWidth() - 1, y);
        g.setColor(color.darker());
        g.drawLine(x + 1, y + squareHeight() - 1, x + squareWidth() - 1, y + squareHeight() - 1);
        g.drawLine(x + squareWidth() - 1, y + squareHeight() - 1, x + squareWidth() - 1, y + 1);
    }
    
    /**
     * Ширина изображения ячейки, в соответствии с шириной окна
     * @return 
     */
    public int squareWidth() {
        return (int) getSize().getWidth() / FIELD_WIDTH;
    }
 
    /**
     * Высота изображения ячейки, в соответствии с шириной окна
     * @return 
     */
    public int squareHeight() {
        return (int) getSize().getHeight() / FIELD_HEIGHT;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
